var Ot=Object.defineProperty;var B=(r,e)=>()=>(r&&(e=r(r=0)),e);var Wt=(r,e)=>{for(var t in e)Ot(r,t,{get:e[t],enumerable:!0})};function S(r){if(r instanceof Error)return r.message;if(typeof r=="string")return r;if(typeof r=="object"&&r!==null&&"message"in r&&typeof r.message=="string")return r.message;try{return String(r)}catch{return"Unknown error"}}function me(r,e){return`${r}: ${S(e)}`}var he=B(()=>{"use strict"});function f(r){let e=new Uint8Array(r),t=Array.from(e,s=>String.fromCharCode(s)).join("");return btoa(t).replace(/\+/g,"-").replace(/\//g,"_").replace(/=+$/g,"")}function D(r){let e=r.replace(/-/g,"+").replace(/_/g,"/"),t=e.length%4;t&&(e+="=".repeat(4-t));let n=atob(e),s=new Uint8Array(n.length);for(let a=0;a<n.length;a++)s[a]=n.charCodeAt(a);return s.buffer}function $(r){if(r.length!==65||r[0]!==4)throw new Error("Invalid uncompressed P-256 public key");let e=f(r.slice(1,33).buffer),t=f(r.slice(33).buffer);return{kty:"EC",crv:"P-256",x:e,y:t}}async function j(r){let e={crv:r.crv,kty:r.kty,x:r.x,y:r.y},t=JSON.stringify(e),n=await crypto.subtle.digest("SHA-256",new TextEncoder().encode(t));return f(n)}function Oe(r){return"{"+Object.keys(r).sort().map(n=>[n,r[n]]).map(([n,s])=>`"${String(n)}":${JSON.stringify(s)}`).join(",")+"}"}function se(r){let e={kmsVersion:r.kmsVersion,method:r.method,algVersion:r.algVersion,purpose:r.purpose};r.credentialId&&(e.credentialId=f(r.credentialId));let t=Oe(e);return new TextEncoder().encode(t).buffer}function ae(r){let e={kmsVersion:r.kmsVersion,kid:r.kid,alg:r.alg,purpose:r.purpose,createdAt:r.createdAt,keyType:r.keyType},t=Oe(e);return new TextEncoder().encode(t).buffer}async function ge(r){let e=await crypto.subtle.exportKey("raw",r),t=await crypto.subtle.importKey("raw",e,{name:"HMAC",hash:"SHA-256"},!1,["sign"]),n=new TextEncoder().encode("ATS/KMS/KCV/v2");return await crypto.subtle.sign("HMAC",t,n)}function We(r,e){return Ht(r,e)}function Ht(r,e){let t=new Uint8Array(r),n=new Uint8Array(e);if(t.length!==n.length)return!1;let s=0;for(let a=0;a<t.length;a++)s|=t[a]^n[a];return s===0}async function Q(r){return await crypto.subtle.digest("SHA-256",new TextEncoder().encode(r))}async function Fe(r={min:150,max:300,mid:220}){let e=await crypto.subtle.importKey("raw",new TextEncoder().encode("calibration"),"PBKDF2",!1,["deriveBits"]),t=crypto.getRandomValues(new Uint8Array(16)),n=1e5,s=performance.now();await crypto.subtle.deriveBits({name:"PBKDF2",hash:"SHA-256",salt:t,iterations:n},e,256);let d=performance.now()-s,o=Math.round(n*r.mid/d);return o=Math.min(Math.max(o,5e4),2e6),{iterations:o,measuredMs:d}}var G=B(()=>{"use strict"});async function ie(){return new Promise((r,e)=>{let t=indexedDB.open($t,jt);t.onerror=()=>{e(new Error("Failed to open IndexedDB"))},t.onsuccess=()=>{W=t.result,r()},t.onupgradeneeded=n=>{let s=n.target.result;if(s.objectStoreNames.contains("config")||s.createObjectStore("config",{keyPath:"method"}),!s.objectStoreNames.contains("keys")){let a=s.createObjectStore("keys",{keyPath:"kid"});a.createIndex("by-purpose","purpose",{unique:!1}),a.createIndex("by-createdAt","createdAt",{unique:!1})}if(!s.objectStoreNames.contains("leases")){let a=s.createObjectStore("leases",{keyPath:"leaseId"});a.createIndex("by-userId","userId",{unique:!1}),a.createIndex("by-exp","exp",{unique:!1})}if(!s.objectStoreNames.contains("audit")){let a=s.createObjectStore("audit",{autoIncrement:!0});a.createIndex("by-seqNum","seqNum",{unique:!0}),a.createIndex("by-timestamp","timestamp",{unique:!1}),a.createIndex("by-op","op",{unique:!1}),a.createIndex("by-kid","kid",{unique:!1})}s.objectStoreNames.contains("meta")||s.createObjectStore("meta",{keyPath:"key"})}})}async function N(){if(W||await ie(),!W)throw new Error("Database not initialized");return W}function He(){W&&(W.close(),W=null)}async function oe(r,e){let t=await N();return new Promise((n,s)=>{let o=t.transaction(r,"readonly").objectStore(r).get(e);o.onsuccess=()=>{n(o.result)},o.onerror=()=>{s(new Error(`Failed to get from ${r}`))}})}async function J(r,e){let t=await N();return new Promise((n,s)=>{let o=t.transaction(r,"readwrite").objectStore(r).put(e);o.onsuccess=()=>{n()},o.onerror=()=>{s(new Error(`Failed to put to ${r}`))}})}async function ke(r,e){let t=await N();return new Promise((n,s)=>{let o=t.transaction(r,"readwrite").objectStore(r).delete(e);o.onsuccess=()=>{n()},o.onerror=()=>{s(new Error(`Failed to delete from ${r}`))}})}async function Gt(r){let e=await N();return new Promise((t,n)=>{let d=e.transaction(r,"readonly").objectStore(r).getAll();d.onsuccess=()=>{t(d.result)},d.onerror=()=>{n(new Error(`Failed to getAll from ${r}`))}})}async function L(r,e,t,n=r.algorithm,s=r.usages,a={alg:"unknown",purpose:"unknown"}){let d=crypto.getRandomValues(new Uint8Array(12)),o=Date.now(),i=ae({kmsVersion:2,kid:t,alg:a.alg,purpose:a.purpose,createdAt:o,keyType:Array.isArray(s)?s.join(","):String(s)}),c=r.type==="private"?"pkcs8":"raw",u=await crypto.subtle.exportKey(c,r),l=await crypto.subtle.encrypt({name:"AES-GCM",iv:d,additionalData:i},e,u),p={kid:t,kmsVersion:2,wrappedKey:l,iv:d.buffer.slice(d.byteOffset,d.byteOffset+d.byteLength),aad:i,...a.publicKeyRaw!==void 0&&{publicKeyRaw:a.publicKeyRaw},alg:a.alg,purpose:a.purpose,createdAt:o};await J("keys",p)}async function $e(r,e,t,n=[]){let s=await oe("keys",r);if(!s)throw new Error(`No wrapped key with id: ${r}`);let a=new Uint8Array(s.iv),d=s.aad,o=await crypto.subtle.decrypt({name:"AES-GCM",iv:a,additionalData:d},e,s.wrappedKey),i=typeof t=="string"?t:t.name,u=i==="ECDSA"||i==="ECDH"||i==="Ed25519"||i.startsWith("RSA")?"pkcs8":"raw";return await crypto.subtle.importKey(u,o,t,!1,n)}async function U(r){return await oe("keys",r)??null}async function x(){return Gt("keys")}async function je(r){await ke("keys",r)}async function K(r){let e=await oe("meta",r);return e?e.value:null}async function C(r,e){await J("meta",{key:r,value:e})}async function Ge(r){await ke("meta",r)}async function Ne(r){await J("audit",r)}async function _(){let r=await N();return new Promise((e,t)=>{let d=r.transaction("audit","readonly").objectStore("audit").index("by-seqNum").getAll();d.onsuccess=()=>{e(d.result)},d.onerror=()=>{t(new Error("Failed to get audit entries"))}})}async function Je(){let r=await _();return r.length>0?r[r.length-1]:null}async function be(r){await J("leases",r)}async function Y(r){return await oe("leases",r)??null}async function ve(r){let e=await N();return new Promise((t,n)=>{let o=e.transaction("leases","readonly").objectStore("leases").index("by-userId").getAll(r);o.onsuccess=()=>{t(o.result)},o.onerror=()=>{n(new Error("Failed to get user leases"))}})}async function X(r){await ke("leases",r)}async function _e(r){let t=(await x()).filter(a=>a.purpose==="vapid");if(t.length===0)throw new Error("No VAPID key found. Generate a VAPID key first.");if(t.length>1)throw new Error("Multiple VAPID keys found. Cannot determine which to update.");let n=t[0];if(!n)throw new Error("No VAPID key found after filtering");let s={...n,subscription:r};await J("keys",s)}async function ze(){let e=(await x()).filter(a=>a.purpose==="vapid");if(e.length===0)throw new Error("No VAPID key found");if(e.length>1)throw new Error("Multiple VAPID keys found. Cannot determine which to update.");let t=e[0];if(!t)throw new Error("No VAPID key found after filtering");let{subscription:n,...s}=t;await J("keys",s)}async function Ae(){let e=(await x()).filter(n=>n.purpose==="vapid");if(e.length===0)throw new Error("No VAPID key found");if(e.length>1)throw new Error("Multiple VAPID keys found. Cannot determine which to read.");let t=e[0];if(!t)throw new Error("No VAPID key found after filtering");return t.subscription??null}var $t,jt,W,de=B(()=>{"use strict";G();$t="kms-v2",jt=1,W=null});function Ke(){let r=new Uint8Array(32);return crypto.getRandomValues(r),r}async function Ie(r,e,t){let n=t??Ke(),{iterations:s}=await Fe(),a=crypto.getRandomValues(new Uint8Array(16)),d=await crypto.subtle.importKey("raw",new TextEncoder().encode(e),"PBKDF2",!1,["deriveKey"]),o=await crypto.subtle.deriveKey({name:"PBKDF2",hash:"SHA-256",salt:a,iterations:s},d,{name:"AES-GCM",length:256},!0,["encrypt","decrypt"]),i=await ge(o),c=crypto.getRandomValues(new Uint8Array(12)),u=se({kmsVersion:2,method:"passphrase",algVersion:1,purpose:"master-secret"}),l=await crypto.subtle.encrypt({name:"AES-GCM",iv:c,additionalData:u},o,n),p={kmsVersion:2,algVersion:1,method:"passphrase",kdf:{algorithm:"PBKDF2-HMAC-SHA256",iterations:s,salt:a.buffer.slice(a.byteOffset,a.byteOffset+a.byteLength),lastCalibratedAt:Date.now(),platformHash:""},kcv:i,encryptedMS:l,msIV:c.buffer.slice(c.byteOffset,c.byteOffset+c.byteLength),msAAD:u,msVersion:1,createdAt:Date.now(),updatedAt:Date.now()};return await C(ue(r),p),{success:!0,ms:n}}async function Ee(r,e,t,n,s="",a,d){let o=n??Ke(),i=a??crypto.getRandomValues(new Uint8Array(32)),c=d??await Q("ATS/KMS/KEK-wrap/salt/v2"),u=new TextEncoder().encode("ATS/KMS/KEK-wrap/v2"),l=await crypto.subtle.importKey("raw",t,"HKDF",!1,["deriveKey"]),p=c instanceof Uint8Array?c.buffer:c,y=await crypto.subtle.deriveKey({name:"HKDF",hash:"SHA-256",salt:p,info:u},l,{name:"AES-GCM",length:256},!1,["encrypt","decrypt"]),w=crypto.getRandomValues(new Uint8Array(12)),k=se({kmsVersion:2,method:"passkey-prf",algVersion:1,credentialId:e,purpose:"master-secret"}),h=await crypto.subtle.encrypt({name:"AES-GCM",iv:w,additionalData:k},y,o),m=Date.now(),b=i.buffer.slice(i.byteOffset,i.byteOffset+i.byteLength),E;c instanceof Uint8Array?E=c.buffer.slice(c.byteOffset,c.byteOffset+c.byteLength):E=c;let R={kmsVersion:2,algVersion:1,method:"passkey-prf",credentialId:e,rpId:s,kdf:{algorithm:"HKDF-SHA256",appSalt:b,hkdfSalt:E,info:"ATS/KMS/KEK-wrap/v2"},encryptedMS:h,msIV:w.buffer.slice(w.byteOffset,w.byteOffset+w.byteLength),msAAD:k,msVersion:1,createdAt:m,updatedAt:m};return await C(ce(r),R),{success:!0,ms:o}}async function Pe(r,e,t,n=""){let s=t??Ke(),a=crypto.getRandomValues(new Uint8Array(32)),d=await Q("ATS/KMS/KEK-gate/salt/v2"),o=new TextEncoder().encode("ATS/KMS/KEK-gate/v2"),i=await crypto.subtle.importKey("raw",a,"HKDF",!1,["deriveKey"]),c=await crypto.subtle.deriveKey({name:"HKDF",hash:"SHA-256",salt:d,info:o},i,{name:"AES-GCM",length:256},!1,["encrypt","decrypt"]),u=crypto.getRandomValues(new Uint8Array(12)),l=se({kmsVersion:2,method:"passkey-gate",algVersion:1,credentialId:e,purpose:"master-secret"}),p=await crypto.subtle.encrypt({name:"AES-GCM",iv:u,additionalData:l},c,s),y=Date.now(),w={kmsVersion:2,algVersion:1,method:"passkey-gate",credentialId:e,rpId:n,pepperWrapped:a.buffer.slice(a.byteOffset,a.byteOffset+a.byteLength),encryptedMS:p,msIV:u.buffer.slice(u.byteOffset,u.byteOffset+u.byteLength),msAAD:l,msVersion:1,createdAt:y,updatedAt:y};return await C(le(r),w),{success:!0,ms:s}}async function Se(r,e){let t=await K(ue(r));if(!t)return{success:!1,error:"Passphrase not set up"};let n=await crypto.subtle.importKey("raw",new TextEncoder().encode(e),"PBKDF2",!1,["deriveKey"]),s=await crypto.subtle.deriveKey({name:"PBKDF2",hash:"SHA-256",salt:t.kdf.salt,iterations:t.kdf.iterations},n,{name:"AES-GCM",length:256},!0,["encrypt","decrypt"]),a=await ge(s);if(!We(a,t.kcv))return{success:!1,error:"Invalid passphrase"};try{let d=await crypto.subtle.decrypt({name:"AES-GCM",iv:t.msIV,additionalData:t.msAAD},s,t.encryptedMS);return{success:!0,ms:new Uint8Array(d)}}catch{return{success:!1,error:"Decryption failed"}}}async function xe(r,e){let t=await K(ce(r));if(!t)return{success:!1,error:"Passkey not set up"};let n=t.kdf.hkdfSalt,s=new TextEncoder().encode(t.kdf.info),a=await crypto.subtle.importKey("raw",e,"HKDF",!1,["deriveKey"]),d=await crypto.subtle.deriveKey({name:"HKDF",hash:"SHA-256",salt:n,info:s},a,{name:"AES-GCM",length:256},!1,["encrypt","decrypt"]);try{let o=await crypto.subtle.decrypt({name:"AES-GCM",iv:t.msIV,additionalData:t.msAAD},d,t.encryptedMS);return{success:!0,ms:new Uint8Array(o)}}catch{return{success:!1,error:"Decryption failed"}}}async function Ce(r){let e=await K(le(r));if(!e)return{success:!1,error:"Passkey gate not set up"};let t=new Uint8Array(e.pepperWrapped),n=await Q("ATS/KMS/KEK-gate/salt/v2"),s=new TextEncoder().encode("ATS/KMS/KEK-gate/v2"),a=await crypto.subtle.importKey("raw",t,"HKDF",!1,["deriveKey"]),d=await crypto.subtle.deriveKey({name:"HKDF",hash:"SHA-256",salt:n,info:s},a,{name:"AES-GCM",length:256},!1,["encrypt","decrypt"]);try{let o=await crypto.subtle.decrypt({name:"AES-GCM",iv:e.msIV,additionalData:e.msAAD},d,e.encryptedMS);return{success:!0,ms:new Uint8Array(o)}}catch{return{success:!1,error:"Decryption failed"}}}async function Qe(r){let e=await K(ue(r)),t=await K(ce(r)),n=await K(le(r));return!!(e||t||n)}async function Re(r){return!!await K(ue(r))}async function De(r){let e=await K(ce(r)),t=await K(le(r));return!!(e||t)}async function Z(r){let e=await Q("ATS/KMS/MKEK/salt/v2"),t=new TextEncoder().encode("ATS/KMS/MKEK/v2"),n=await crypto.subtle.importKey("raw",r,"HKDF",!1,["deriveKey"]);return await crypto.subtle.deriveKey({name:"HKDF",hash:"SHA-256",salt:e,info:t},n,{name:"AES-GCM",length:256},!1,["encrypt","decrypt","wrapKey","unwrapKey"])}async function V(r,e){let t=Date.now(),n=null;try{let s;switch(r.method){case"passphrase":s=await Se(r.userId,r.passphrase);break;case"passkey-prf":s=await xe(r.userId,r.prfOutput);break;case"passkey-gate":s=await Ce(r.userId);break;default:throw new Error("Unknown credential method")}if(!s.success)throw new Error(s.error??"Unlock failed");n=s.ms;let a=await Z(n),d=await e(a,n),o=Date.now();return{result:d,unlockTime:t,lockTime:o,duration:o-t}}finally{n&&n.fill(0)}}var ue,ce,le,Ye=B(()=>{"use strict";G();de();ue=r=>`enrollment:passphrase:v2:${r}`,ce=r=>`enrollment:passkey-prf:v2:${r}`,le=r=>`enrollment:passkey-gate:v2:${r}`});async function Xe(){}async function pe(){let r=await K("LRK");return r||(r=await crypto.subtle.generateKey({name:"AES-GCM",length:256},!1,["wrapKey","unwrapKey","encrypt","decrypt"]),await C("LRK",r)),r}async function ee(r){let e=await crypto.subtle.digest("SHA-256",r);return f(e)}async function M(r){let e=await U("audit-user");if(e&&e.publicKeyRaw){let a=await crypto.subtle.unwrapKey("pkcs8",e.wrappedKey,r,{name:"AES-GCM",iv:e.iv,additionalData:e.aad},{name:"Ed25519"},!1,["sign"]),d=await crypto.subtle.importKey("raw",e.publicKeyRaw,{name:"Ed25519"},!1,["verify"]),o=await ee(e.publicKeyRaw);I={type:"UAK",keyPair:{privateKey:a,publicKey:d},keyId:o};return}let t=await crypto.subtle.generateKey({name:"Ed25519"},!0,["sign","verify"]),n=await crypto.subtle.exportKey("raw",t.publicKey);await L(t.privateKey,r,"audit-user",{name:"Ed25519"},["sign"],{alg:"EdDSA",purpose:"audit",publicKeyRaw:n});let s=await ee(n);I={type:"UAK",keyPair:t,keyId:s}}async function Ze(r,e){if(!I||I.type!=="UAK")throw new Error("UAK must be active to generate LAK - call ensureAuditKey first");let t=Date.now(),n=await crypto.subtle.generateKey({name:"Ed25519"},!0,["sign","verify"]),s=await crypto.subtle.exportKey("raw",n.publicKey),a=f(s),d={type:"audit-delegation",version:1,signerKind:"LAK",leaseId:r,delegatePub:a,scope:["vapid:issue","lease:expire"],notBefore:t,notAfter:e,codeHash:"TODO",manifestHash:"TODO",kmsVersion:"v2.0.0"},o=JSON.stringify(d,Object.keys(d).sort()),i=await crypto.subtle.sign("Ed25519",I.keyPair.privateKey,new TextEncoder().encode(o)),c={...d,sig:f(i)},u=await pe(),l=ae({kmsVersion:2,kid:`lak-${r}`,alg:"EdDSA",purpose:"lak",createdAt:t,keyType:"lease-audit-key"}),p=crypto.getRandomValues(new Uint8Array(12)),y=await crypto.subtle.wrapKey("pkcs8",n.privateKey,u,{name:"AES-GCM",iv:p,additionalData:l});return await C(`lease-audit-key:${r}`,{leaseId:r,wrappedKey:y,iv:p,aad:l,publicKeyRaw:s,delegationCert:c,expiresAt:e,createdAt:t}),{lakKeyPair:n,delegationCert:c}}async function et(r,e){let t=await K(`lease-audit-key:${r}`);if(!t)throw new Error(`LAK not found for lease: ${r}`);let n=await pe(),s=await crypto.subtle.unwrapKey("pkcs8",t.wrappedKey,n,{name:"AES-GCM",iv:t.iv,additionalData:t.aad},{name:"Ed25519"},!1,["sign"]),a=await crypto.subtle.importKey("raw",t.publicKeyRaw,{name:"Ed25519"},!1,["verify"]),d=await ee(t.publicKeyRaw);I={type:"LAK",keyPair:{privateKey:s,publicKey:a},keyId:d,cert:e}}async function tt(){let r=await U("audit-instance");if(r&&r.publicKeyRaw){let i=await pe(),c=await crypto.subtle.unwrapKey("pkcs8",r.wrappedKey,i,{name:"AES-GCM",iv:r.iv,additionalData:r.aad},{name:"Ed25519"},!1,["sign"]),u=await crypto.subtle.importKey("raw",r.publicKeyRaw,{name:"Ed25519"},!1,["verify"]),l=await ee(r.publicKeyRaw);I={type:"KIAK",keyPair:{privateKey:c,publicKey:u},keyId:l};return}let e=await pe(),t=await crypto.subtle.generateKey({name:"Ed25519"},!0,["sign"]),n=await crypto.subtle.exportKey("raw",t.publicKey);await L(t.privateKey,e,"audit-instance",{name:"Ed25519"},["sign"],{alg:"EdDSA",purpose:"audit-instance",publicKeyRaw:n});let s=await U("audit-instance");if(!s)throw new Error("Failed to retrieve wrapped KIAK after storage");let a=await crypto.subtle.unwrapKey("pkcs8",s.wrappedKey,e,{name:"AES-GCM",iv:s.iv,additionalData:s.aad},{name:"Ed25519"},!1,["sign"]),d=await crypto.subtle.importKey("raw",n,{name:"Ed25519"},!1,["verify"]),o=await ee(n);I={type:"KIAK",keyPair:{privateKey:a,publicKey:d},keyId:o}}async function P(r){let e,t,n=new Promise((s,a)=>{e=s,t=a});return Me=Me.then(async()=>{try{if(!I)throw new Error("No active audit signer - call ensureAuditKey, loadLAK, or ensureKIAK first");let s=Date.now(),a=await Je(),d=a?a.chainHash:"",i={kmsVersion:2,seqNum:a?a.seqNum+1:1,timestamp:s,op:r.op,kid:r.kid,requestId:r.requestId,userId:r.userId,origin:r.origin,leaseId:r.leaseId,unlockTime:r.unlockTime,lockTime:r.lockTime,duration:r.duration,details:r.details,previousHash:d,signer:I.type,signerId:I.keyId},c=JSON.stringify(i),u=new TextEncoder().encode(d+c),l=await crypto.subtle.digest("SHA-256",u),p=f(l),y=new TextEncoder().encode(p),w=await crypto.subtle.sign("Ed25519",I.keyPair.privateKey,y),k=f(w),h={kmsVersion:i.kmsVersion,seqNum:i.seqNum,timestamp:i.timestamp,op:i.op,kid:i.kid,requestId:i.requestId,userId:i.userId,...i.origin!==void 0&&{origin:i.origin},...i.leaseId!==void 0&&{leaseId:i.leaseId},...i.unlockTime!==void 0&&{unlockTime:i.unlockTime},...i.lockTime!==void 0&&{lockTime:i.lockTime},...i.duration!==void 0&&{duration:i.duration},...i.details!==void 0&&{details:i.details},previousHash:i.previousHash,chainHash:p,signer:i.signer,signerId:i.signerId,...I.cert!==void 0&&{cert:I.cert},sig:k};await Ne(h),e(h)}catch(s){t(s)}}).catch(()=>{}),n}async function rt(){let r=await _(),e=[],t=0;for(let n of r){let s={kmsVersion:n.kmsVersion,seqNum:n.seqNum,timestamp:n.timestamp,op:n.op,kid:n.kid,requestId:n.requestId,userId:n.userId,origin:n.origin,leaseId:n.leaseId,unlockTime:n.unlockTime,lockTime:n.lockTime,duration:n.duration,details:n.details,previousHash:n.previousHash,signer:n.signer,signerId:n.signerId},a=JSON.stringify(s),d=new TextEncoder().encode(n.previousHash+a),o=await crypto.subtle.digest("SHA-256",d);f(o)!==n.chainHash&&e.push(`Chain hash mismatch at seq ${n.seqNum}`),t+=1}return{valid:e.length===0,verified:t,errors:e}}async function nt(){let r=await U("audit-user");if(!r||!r.publicKeyRaw)throw new Error("UAK not initialized");return{publicKey:f(r.publicKeyRaw)}}function st(){I=null,Me=Promise.resolve()}var Me,I,at=B(()=>{"use strict";de();G();Me=Promise.resolve(),I=null});function A(r,e){if(typeof e!="object"||e===null)throw new v(r,"params","object",e);return e}function g(r,e,t){if(typeof t!="string")throw new v(r,e,"string",t);return t}function F(r,e,t){if(t!==void 0)return g(r,e,t)}function ye(r,e,t){if(typeof t!="number")throw new v(r,e,"number",t);return t}function Nt(r,e,t){if(typeof t!="boolean")throw new v(r,e,"boolean",t);return t}function it(r,e,t){if(t!==void 0)return Nt(r,e,t)}function Le(r,e,t){if(t instanceof ArrayBuffer)return t;if(t instanceof Uint8Array){let n=new ArrayBuffer(t.byteLength);return new Uint8Array(n).set(t),n}throw new v(r,e,"ArrayBuffer or Uint8Array",t)}function Be(r,e,t){if(t!==void 0){if(t instanceof Uint8Array)return t;if(t instanceof ArrayBuffer)return new Uint8Array(t);throw new v(r,e,"ArrayBuffer or Uint8Array",t)}}function H(r,e){if(typeof e!="object"||e===null)throw new v(r,"credentials","AuthCredentials object",e);let t=e;if(typeof t.method!="string")throw new v(r,"credentials.method","string",t.method);if(typeof t.userId!="string")throw new v(r,"credentials.userId","string",t.userId);switch(t.method){case"passphrase":if(typeof t.passphrase!="string")throw new v(r,"credentials.passphrase","string",t.passphrase);return{method:"passphrase",passphrase:t.passphrase,userId:t.userId};case"passkey-prf":if(!(t.prfOutput instanceof ArrayBuffer))throw new v(r,"credentials.prfOutput","ArrayBuffer",t.prfOutput);return{method:"passkey-prf",prfOutput:t.prfOutput,userId:t.userId};case"passkey-gate":return{method:"passkey-gate",userId:t.userId};default:throw new v(r,"credentials.method","passphrase | passkey-prf | passkey-gate",t.method)}}function Jt(r,e){if(typeof e!="object"||e===null)throw new v(r,"payload","VAPIDPayload object",e);let t=e;return{aud:g(r,"payload.aud",t.aud),sub:g(r,"payload.sub",t.sub),exp:ye(r,"payload.exp",t.exp),jti:g(r,"payload.jti",t.jti)}}function ot(r){let e=A("setupPassphrase",r),t=Be("setupPassphrase","existingMS",e.existingMS);return{userId:g("setupPassphrase","userId",e.userId),passphrase:g("setupPassphrase","passphrase",e.passphrase),...t!==void 0&&{existingMS:t}}}function dt(r){let e=A("setupPasskeyPRF",r);if(!e.credentialId)throw new Error("credentialId required");let t=F("setupPasskeyPRF","rpId",e.rpId),n=Be("setupPasskeyPRF","existingMS",e.existingMS);return{userId:g("setupPasskeyPRF","userId",e.userId),credentialId:Le("setupPasskeyPRF","credentialId",e.credentialId),prfOutput:Le("setupPasskeyPRF","prfOutput",e.prfOutput),...t!==void 0&&{rpId:t},...n!==void 0&&{existingMS:n}}}function ut(r){let e=A("setupWithEncryptedCredentials",r),t=g("setupWithEncryptedCredentials","method",e.method);if(t!=="passphrase"&&t!=="passkey-prf"&&t!=="passkey-gate")throw new v("setupWithEncryptedCredentials","method","passphrase | passkey-prf | passkey-gate",t);return{method:t,transportKeyId:g("setupWithEncryptedCredentials","transportKeyId",e.transportKeyId),ephemeralPublicKey:g("setupWithEncryptedCredentials","ephemeralPublicKey",e.ephemeralPublicKey),iv:g("setupWithEncryptedCredentials","iv",e.iv),encryptedCredentials:g("setupWithEncryptedCredentials","encryptedCredentials",e.encryptedCredentials),userId:g("setupWithEncryptedCredentials","userId",e.userId),requestId:g("setupWithEncryptedCredentials","requestId",e.requestId)}}function ct(r){let e=A("setupPasskeyGate",r),t=F("setupPasskeyGate","rpId",e.rpId),n=Be("setupPasskeyGate","existingMS",e.existingMS);return{userId:g("setupPasskeyGate","userId",e.userId),credentialId:Le("setupPasskeyGate","credentialId",e.credentialId),...t!==void 0&&{rpId:t},...n!==void 0&&{existingMS:n}}}function lt(r){let e=A("addEnrollment",r),t=g("addEnrollment","method",e.method);if(t!=="passphrase"&&t!=="passkey-prf"&&t!=="passkey-gate")throw new v("addEnrollment","method","passphrase | passkey-prf | passkey-gate",t);return{userId:g("addEnrollment","userId",e.userId),method:t,credentials:H("addEnrollment",e.credentials),newCredentials:e.newCredentials}}function pt(r){let e=A("generateVAPID",r);return{credentials:H("generateVAPID",e.credentials)}}function yt(r){let e=A("regenerateVAPID",r);return{credentials:H("regenerateVAPID",e.credentials)}}function ft(r){let e=A("signJWT",r);return{kid:g("signJWT","kid",e.kid),payload:Jt("signJWT",e.payload),credentials:H("signJWT",e.credentials)}}function wt(r){let e=A("createLease",r),t={userId:g("createLease","userId",e.userId),ttlHours:ye("createLease","ttlHours",e.ttlHours),credentials:H("createLease",e.credentials)},n=it("createLease","autoExtend",e.autoExtend);return n!==void 0&&(t.autoExtend=n),t}function mt(r){let e=A("extendLeases",r);if(!Array.isArray(e.leaseIds))throw new Error(`RPC extendLeases: Invalid leaseIds - expected array, got ${typeof e.leaseIds}`);if(e.leaseIds.length===0)throw new Error("RPC extendLeases: leaseIds array cannot be empty");let n={leaseIds:e.leaseIds.map((a,d)=>{if(typeof a!="string"||a.length===0)throw new Error(`RPC extendLeases: Invalid leaseId at index ${d} - expected non-empty string`);return a}),userId:g("extendLeases","userId",e.userId)},s=it("extendLeases","requestAuth",e.requestAuth);return s!==void 0&&(n.requestAuth=s),e.credentials!==void 0&&(n.credentials=H("extendLeases",e.credentials)),n}function ht(r){let e=A("issueVAPIDJWT",r),t=F("issueVAPIDJWT","kid",e.kid),n=F("issueVAPIDJWT","jti",e.jti),s=e.exp!==void 0?ye("issueVAPIDJWT","exp",e.exp):void 0;return{leaseId:g("issueVAPIDJWT","leaseId",e.leaseId),...t!==void 0&&{kid:t},...n!==void 0&&{jti:n},...s!==void 0&&{exp:s}}}function gt(r){let e=A("issueVAPIDJWTs",r),t=F("issueVAPIDJWTs","kid",e.kid);return{leaseId:g("issueVAPIDJWTs","leaseId",e.leaseId),count:ye("issueVAPIDJWTs","count",e.count),...t!==void 0&&{kid:t}}}function kt(r){if(r==null)return{};let e=A("isSetup",r),t=F("isSetup","userId",e.userId);return t!==void 0?{userId:t}:{}}function bt(r){if(r==null)return{};let e=A("getEnrollments",r),t=F("getEnrollments","userId",e.userId);return t!==void 0?{userId:t}:{}}function vt(r){let e=A("getPublicKey",r);return{kid:g("getPublicKey","kid",e.kid)}}function At(r){let e=A("getUserLeases",r);return{userId:g("getUserLeases","userId",e.userId)}}function Kt(r){let e=A("verifyLease",r),t={leaseId:g("verifyLease","leaseId",e.leaseId)};if("deleteIfInvalid"in e){if(typeof e.deleteIfInvalid!="boolean")throw new Error("verifyLease: deleteIfInvalid must be a boolean");t.deleteIfInvalid=e.deleteIfInvalid}return t}function It(r){let e=A("removeEnrollment",r);return{enrollmentId:g("removeEnrollment","enrollmentId",e.enrollmentId),credentials:H("removeEnrollment",e.credentials)}}function zt(r,e){if(typeof e!="object"||e===null)throw new v(r,"subscription","object",e);let t=e,n=g(r,"subscription.endpoint",t.endpoint);if(!n.startsWith("https://"))throw new Error(`${r}: subscription.endpoint must use HTTPS`);let s;try{s=new URL(n)}catch{throw new Error(`${r}: subscription.endpoint is not a valid URL`)}if(!_t.some(p=>s.hostname===p||s.hostname.endsWith(`.${p}`)))throw new Error(`${r}: subscription.endpoint must be from a known push service (FCM, APNs, Mozilla Push, WNS). Got: ${s.hostname}`);let d=t.expirationTime;if(d!==null&&typeof d!="number")throw new v(r,"subscription.expirationTime","number or null",d);if(typeof t.keys!="object"||t.keys===null)throw new v(r,"subscription.keys","object",t.keys);let o=t.keys,i=g(r,"subscription.keys.p256dh",o.p256dh),c=g(r,"subscription.keys.auth",o.auth);if(i.length===0)throw new Error(`${r}: subscription.keys.p256dh must be non-empty`);if(c.length===0)throw new Error(`${r}: subscription.keys.auth must be non-empty`);let u=g(r,"subscription.eid",t.eid);if(u.length===0)throw new Error(`${r}: subscription.eid must be non-empty`);let l=t.createdAt;if(typeof l!="number")throw new v(r,"subscription.createdAt","number",l);return{endpoint:n,expirationTime:d,keys:{p256dh:i,auth:c},eid:u,createdAt:l}}function Et(r){let e=A("setPushSubscription",r);return{subscription:zt("setPushSubscription",e.subscription)}}var v,_t,Pt=B(()=>{"use strict";v=class extends Error{constructor(t,n,s,a){super(`RPC ${t}: Invalid ${n} - expected ${s}, got ${typeof a}`);this.method=t;this.param=n;this.expected=s;this.received=a;this.name="RPCValidationError"}};_t=["fcm.googleapis.com","web.push.apple.com","updates.push.services.mozilla.com","notify.windows.com"]});function Yt(r){if(typeof r!="object"||r===null)return!1;let e=r;return typeof e.tokensIssued=="number"&&typeof e.lastResetAt=="number"}function St(r){return Yt(r)?r:{tokensIssued:0,lastResetAt:Date.now()}}var xt=B(()=>{"use strict"});var Bt={};Wt(Bt,{handleMessage:()=>Ct});async function Xt(r,e){let t=await crypto.subtle.importKey("raw",r,"HKDF",!1,["deriveKey"]);return await crypto.subtle.deriveKey({name:"HKDF",hash:"SHA-256",salt:e,info:new TextEncoder().encode("ATS/KMS/SessionKEK/v1")},t,{name:"AES-GCM",length:256},!1,["wrapKey","unwrapKey"])}async function Zt(){let r=await crypto.subtle.generateKey({name:"ECDH",namedCurve:"P-256"},!0,["deriveBits"]),e=await crypto.subtle.exportKey("raw",r.publicKey),t=crypto.randomUUID(),n=crypto.getRandomValues(new Uint8Array(32)),s=crypto.getRandomValues(new Uint8Array(32));return fe.set(t,{privateKey:r.privateKey,appSalt:n,hkdfSalt:s,createdAt:Date.now()}),setTimeout(()=>{fe.delete(t)},10*60*1e3),{publicKey:f(e),keyId:t,appSalt:f(n.buffer),hkdfSalt:f(s.buffer)}}async function er(r){let e=fe.get(r.transportKeyId);if(!e)throw new Error("Transport key not found or expired");try{let t=D(r.ephemeralPublicKey),n=await crypto.subtle.importKey("raw",t,{name:"ECDH",namedCurve:"P-256"},!1,[]),s=await crypto.subtle.deriveBits({name:"ECDH",public:n},e.privateKey,256),a=await crypto.subtle.importKey("raw",s,"HKDF",!1,["deriveBits"]),d=await crypto.subtle.deriveBits({name:"HKDF",salt:new Uint8Array(32),info:new TextEncoder().encode("ATS/KMS/setup-transport/v2"),hash:"SHA-256"},a,256),o=await crypto.subtle.importKey("raw",d,{name:"AES-GCM",length:256},!1,["decrypt"]),i=D(r.iv),c=D(r.encryptedCredentials),u=await crypto.subtle.decrypt({name:"AES-GCM",iv:i,tagLength:128},o,c),l=JSON.parse(new TextDecoder().decode(u)),p;if(r.method==="passphrase"){let y=l;p=await Rt({userId:r.userId,passphrase:y.passphrase},r.requestId)}else if(r.method==="passkey-prf"){let y=l;p=await Dt({userId:r.userId,credentialId:D(y.credentialId),prfOutput:D(y.prfOutput),...y.rpId!==void 0&&{rpId:y.rpId},appSalt:e.appSalt,hkdfSalt:e.hkdfSalt},r.requestId)}else if(r.method==="passkey-gate"){let y=l;p=await Mt({userId:r.userId,credentialId:D(y.credentialId),...y.rpId!==void 0&&{rpId:y.rpId}},r.requestId)}else{let y=r.method;throw new Error(`Unknown method: ${String(y)}`)}return fe.delete(r.transportKeyId),p}catch(t){throw t}}async function Ct(r){let{id:e,method:t,params:n}=r;try{let s;switch(t){case"generateSetupTransportKey":s=await Zt();break;case"setupWithEncryptedCredentials":s=await er(ut(n));break;case"setupPassphrase":s=await Rt(ot(n),e);break;case"setupPasskeyPRF":s=await Dt(dt(n),e);break;case"setupPasskeyGate":s=await Mt(ct(n),e);break;case"addEnrollment":s=await tr(lt(n),e);break;case"generateVAPID":s=await rr(pt(n),e);break;case"regenerateVAPID":s=await nr(yt(n),e);break;case"signJWT":s=await sr(ft(n),e);break;case"createLease":s=await ar(wt(n),e);break;case"extendLeases":s=await ir(mt(n),e);break;case"issueVAPIDJWT":s=await Lt(ht(n),e);break;case"issueVAPIDJWTs":s=await or(gt(n),e);break;case"isSetup":s=await dr(kt(n));break;case"getEnrollments":s=await ur(bt(n));break;case"verifyAuditChain":s=await cr();break;case"getAuditLog":s=await lr();break;case"getPublicKey":s=await pr(vt(n));break;case"getAuditPublicKey":s=await yr();break;case"getUserLeases":s=await fr(At(n));break;case"verifyLease":s=await wr(Kt(n));break;case"getVAPIDKid":s=await mr();break;case"resetKMS":s=await br();break;case"removeEnrollment":s=await vr(It(n),e);break;case"setPushSubscription":s=await hr(Et(n));break;case"removePushSubscription":s=await gr();break;case"getPushSubscription":s=await kr();break;default:throw new Error(`Unknown RPC method: ${t}`)}return{id:e,result:s}}catch(s){return{id:e,error:S(s)}}}async function Rt(r,e){let{userId:t,passphrase:n,existingMS:s}=r;if(!n||n.length<8)throw new Error("Passphrase must be at least 8 characters");let a=await Ie(t,n,s);if(!a.success)throw new Error(a.error);let d=await Z(a.ms);await M(d);let o=await crypto.subtle.generateKey({name:"ECDSA",namedCurve:"P-256"},!0,["sign","verify"]);if(!("privateKey"in o)||!("publicKey"in o))throw new Error("Failed to generate ECDSA keypair");let i=o,c=await crypto.subtle.exportKey("raw",i.publicKey),u=$(new Uint8Array(c)),l=await j(u);return await L(i.privateKey,d,l,{name:"ECDSA",namedCurve:"P-256"},["sign"],{alg:"ES256",purpose:"vapid",publicKeyRaw:c}),a.ms.fill(0),await P({op:"setup-passphrase",kid:"",requestId:e,userId:t,details:{method:"passphrase",vapidKid:l}}),{success:!0,enrollmentId:"enrollment:passphrase:v2",vapidPublicKey:f(c),vapidKid:l}}async function Dt(r,e){let{userId:t,credentialId:n,prfOutput:s,rpId:a="",existingMS:d,appSalt:o,hkdfSalt:i}=r;if(!n||n.byteLength===0)throw new Error("credentialId required");if(!s||s.byteLength!==32)throw new Error("prfOutput must be 32 bytes");let c=await Ee(t,n,s,d,a,o,i);if(!c.success)throw new Error(c.error);let u=await Z(c.ms);await M(u);let l=await crypto.subtle.generateKey({name:"ECDSA",namedCurve:"P-256"},!0,["sign","verify"]);if(!("privateKey"in l)||!("publicKey"in l))throw new Error("Failed to generate ECDSA keypair");let p=l,y=await crypto.subtle.exportKey("raw",p.publicKey),w=$(new Uint8Array(y)),k=await j(w);return await L(p.privateKey,u,k,{name:"ECDSA",namedCurve:"P-256"},["sign"],{alg:"ES256",purpose:"vapid",publicKeyRaw:y}),c.ms.fill(0),await P({op:"setup-passkey-prf",kid:"",requestId:e,userId:t,details:{method:"passkey-prf",credentialId:f(n),vapidKid:k}}),{success:!0,enrollmentId:"enrollment:passkey-prf:v2",vapidPublicKey:f(y),vapidKid:k}}async function Mt(r,e){let{userId:t,credentialId:n,rpId:s="",existingMS:a}=r;if(!n||n.byteLength===0)throw new Error("credentialId required");let d=await Pe(t,n,a,s);if(!d.success)throw new Error(d.error);let o=await Z(d.ms);await M(o);let i=await crypto.subtle.generateKey({name:"ECDSA",namedCurve:"P-256"},!0,["sign","verify"]);if(!("privateKey"in i)||!("publicKey"in i))throw new Error("Failed to generate ECDSA keypair");let c=i,u=await crypto.subtle.exportKey("raw",c.publicKey),l=$(new Uint8Array(u)),p=await j(l);return await L(c.privateKey,o,p,{name:"ECDSA",namedCurve:"P-256"},["sign"],{alg:"ES256",purpose:"vapid",publicKeyRaw:u}),d.ms.fill(0),await P({op:"setup-passkey-gate",kid:"",requestId:e,userId:t,details:{method:"passkey-gate",credentialId:f(n),vapidKid:p}}),{success:!0,enrollmentId:"enrollment:passkey-gate:v2",vapidPublicKey:f(u),vapidKid:p}}async function tr(r,e){let{userId:t,method:n,credentials:s,newCredentials:a}=r;function d(u,l){if(typeof l!="object"||l===null)throw new Error(`newCredentials must be an object for ${u}`);return l}let o=d(n,a);await V(s,async(u,l)=>(await M(u),!0));let i;if(s.method==="passphrase"){let u=await Se(t,s.passphrase);if(!u.success)throw new Error(u.error);i=u.ms}else if(s.method==="passkey-prf"){let u=await xe(t,s.prfOutput);if(!u.success)throw new Error(u.error);i=u.ms}else if(s.method==="passkey-gate"){let u=await Ce(t);if(!u.success)throw new Error(u.error);i=u.ms}else throw new Error("Invalid credentials method");let c;if(n==="passphrase"){if(typeof o.passphrase!="string")throw new Error("passphrase must be a string");c=await Ie(t,o.passphrase,i)}else if(n==="passkey-prf"){if(!(o.credentialId instanceof ArrayBuffer))throw new Error("credentialId must be an ArrayBuffer");if(!(o.prfOutput instanceof ArrayBuffer))throw new Error("prfOutput must be an ArrayBuffer");let u=typeof o.rpId=="string"?o.rpId:"";c=await Ee(t,o.credentialId,o.prfOutput,i,u)}else if(n==="passkey-gate"){if(!(o.credentialId instanceof ArrayBuffer))throw new Error("credentialId must be an ArrayBuffer");let u=typeof o.rpId=="string"?o.rpId:"";c=await Pe(t,o.credentialId,i,u)}else{let u=n;throw new Error(`Unknown enrollment method: ${String(u)}`)}if(i.fill(0),!c.success)throw new Error(c.error);return await P({op:"add-enrollment",kid:"",requestId:e,userId:s.userId,details:{method:n,action:"add-enrollment"}}),{success:!0,enrollmentId:`enrollment:${n}:v2`}}async function rr(r,e){let{credentials:t}=r,n=await V(t,async(s,a)=>{await M(s);let d=await crypto.subtle.generateKey({name:"ECDSA",namedCurve:"P-256"},!0,["sign","verify"]);if(!("privateKey"in d)||!("publicKey"in d))throw new Error("Failed to generate ECDSA keypair");let o=d,i=await crypto.subtle.exportKey("raw",o.publicKey),c=$(new Uint8Array(i)),u=await j(c);return await L(o.privateKey,s,u,{name:"ECDSA",namedCurve:"P-256"},["sign"],{alg:"ES256",purpose:"vapid",publicKeyRaw:i}),{kid:u,publicKey:f(i)}});return await P({op:"generate",kid:n.result.kid,requestId:e,userId:t.userId,unlockTime:n.unlockTime,lockTime:n.lockTime,duration:n.duration,details:{algorithm:"ECDSA",curve:"P-256",purpose:"vapid"}}),n.result}async function nr(r,e){let{credentials:t}=r,n=await V(t,async(s,a)=>{await M(s);let o=(await x()).filter(y=>y.purpose==="vapid");for(let y of o)await je(y.kid);let i=await crypto.subtle.generateKey({name:"ECDSA",namedCurve:"P-256"},!0,["sign","verify"]);if(!("privateKey"in i)||!("publicKey"in i))throw new Error("Failed to generate ECDSA keypair");let c=i,u=await crypto.subtle.exportKey("raw",c.publicKey),l=$(new Uint8Array(u)),p=await j(l);return await L(c.privateKey,s,p,{name:"ECDSA",namedCurve:"P-256"},["sign"],{alg:"ES256",purpose:"vapid",publicKeyRaw:u}),{kid:p,publicKey:f(u),oldKids:o.map(y=>y.kid)}});return await P({op:"regenerate-vapid",kid:n.result.kid,requestId:e,userId:t.userId,unlockTime:n.unlockTime,lockTime:n.lockTime,duration:n.duration,details:{algorithm:"ECDSA",curve:"P-256",purpose:"vapid",oldKids:n.result.oldKids,deletedCount:n.result.oldKids.length}}),{kid:n.result.kid,publicKey:n.result.publicKey}}async function sr(r,e){let{kid:t,payload:n,credentials:s}=r;if(!n.aud||!n.sub||!n.exp)throw new Error("JWT payload must include aud, sub, and exp");let a=Math.floor(Date.now()/1e3);if(n.exp<=a)throw new Error("JWT exp must be in the future");if(n.exp>a+86400)throw new Error("JWT exp must be <= 24 hours (RFC 8292)");let d=await V(s,async(o,i)=>{await M(o);let c=await $e(t,o,{name:"ECDSA",namedCurve:"P-256"},["sign"]),u={typ:"JWT",alg:"ES256",kid:t},l=f(new TextEncoder().encode(JSON.stringify(u)).buffer),p=f(new TextEncoder().encode(JSON.stringify(n)).buffer),y=new TextEncoder().encode(`${l}.${p}`),w=await crypto.subtle.sign({name:"ECDSA",hash:"SHA-256"},c,y),k=f(w);return{jwt:`${l}.${p}.${k}`}});return await P({op:"sign",kid:t,requestId:e,userId:s.userId,unlockTime:d.unlockTime,lockTime:d.lockTime,duration:d.duration,details:{algorithm:"ES256",aud:n.aud,exp:n.exp,jti:n.jti}}),d.result}async function ar(r,e){let{userId:t,ttlHours:n,credentials:s,autoExtend:a}=r;if(n<=0||n>720)throw new Error("ttlHours must be between 0 and 720 (30 days)");let o=(await x()).filter(m=>m.purpose==="vapid");if(o.length===0)throw new Error("No VAPID key found. VAPID key should have been generated during setup.");o.sort((m,b)=>b.createdAt-m.createdAt);let i=o[0];if(!i)throw new Error("VAPID key record not found after filtering");let c=i.kid,u=`lease-${crypto.randomUUID()}`,l=crypto.getRandomValues(new Uint8Array(32)),p=Date.now(),y=p+n*3600*1e3,w=await V(s,async(m,b)=>{await M(m);let{delegationCert:E}=await Ze(u,y),R=await Xt(b,l),T=await U(c);if(!T)throw new Error(`No wrapped key with id: ${c}`);let te=new Uint8Array(T.iv),re=T.aad,we=await crypto.subtle.unwrapKey("pkcs8",T.wrappedKey,m,{name:"AES-GCM",iv:te,additionalData:re},{name:"ECDSA",namedCurve:"P-256"},!0,["sign"]),ne=crypto.getRandomValues(new Uint8Array(12));return{wrappedLeaseKey:await crypto.subtle.wrapKey("pkcs8",we,R,{name:"AES-GCM",iv:ne}),iv:ne,sessionKEK:R,lakDelegationCert:E}});await C(`sessionkek:${u}`,w.result.sessionKEK),Ue.set(u,w.result.sessionKEK);let k={tokensPerHour:100,sendsPerMinute:10,burstSends:20,sendsPerMinutePerEid:5},h={leaseId:u,userId:t,ttlHours:n,createdAt:p,exp:y,autoExtend:a??!0,quotas:k,wrappedLeaseKey:w.result.wrappedLeaseKey,wrappedLeaseKeyIV:w.result.iv.buffer.slice(w.result.iv.byteOffset,w.result.iv.byteOffset+w.result.iv.byteLength),leaseSalt:l.buffer.slice(l.byteOffset,l.byteOffset+l.byteLength),kid:c,lakDelegationCert:w.result.lakDelegationCert};return await be(h),await C(`quota:${u}`,{leaseId:u,tokensIssued:0,lastResetAt:p,perEndpoint:{}}),await P({op:"create-lease",kid:c,requestId:e,userId:t,details:{action:"create-lease",leaseId:u,userId:t,ttlHours:n,autoExtend:h.autoExtend}}),{leaseId:u,exp:y,quotas:k,autoExtend:h.autoExtend??!0}}async function ir(r,e){let{leaseIds:t,credentials:n,requestAuth:s}=r,a=[],d=0,o=0,i=0,c=!1;if(n)try{await V(n,async(u,l)=>(c=!0,Promise.resolve()))}catch(u){for(let l of t){let p=await Y(l);p&&p.autoExtend===!1&&(a.push({leaseId:l,status:"skipped",reason:`Authentication failed: ${S(u)}`}),o++)}if(o===t.length)return{results:a,extended:d,skipped:o,failed:i}}for(let u of t)try{let l=await Y(u);if(!l){a.push({leaseId:u,status:"skipped",reason:`Lease not found: ${u}`}),o++;continue}if(l.autoExtend===!1&&!s){a.push({leaseId:u,status:"skipped",reason:"Lease has autoExtend=false and authentication was not requested"}),o++;continue}if(l.autoExtend===!1&&s&&!c){a.push({leaseId:u,status:"skipped",reason:"Authentication required but credentials not valid"}),o++;continue}let y=(await x()).filter(E=>E.purpose==="vapid");if(y.length===0){a.push({leaseId:u,status:"skipped",reason:"No VAPID key found"}),o++;continue}y.sort((E,R)=>R.createdAt-E.createdAt);let k=y[0].kid;if(l.kid!==k){a.push({leaseId:u,status:"skipped",reason:`Lease is for different VAPID key (lease kid: ${l.kid}, current kid: ${k})`}),o++;continue}let h=Date.now(),m=h+30*24*60*60*1e3,b={...l,exp:m,createdAt:h};await be(b),await P({op:"extend-lease",kid:b.kid,requestId:e,userId:b.userId,details:{action:"extend-lease",leaseId:b.leaseId,userId:b.userId,newExp:m,autoExtend:b.autoExtend}}),a.push({leaseId:u,status:"extended",result:{leaseId:b.leaseId,exp:b.exp,iat:b.createdAt,kid:b.kid,autoExtend:b.autoExtend??!1}}),d++}catch(l){a.push({leaseId:u,status:"skipped",reason:`Error extending lease: ${S(l)}`}),i++}return{results:a,extended:d,skipped:o,failed:i}}async function Lt(r,e){let{leaseId:t}=r,{kid:n}=r;if(!n){let z=(await x()).filter(qt=>qt.purpose==="vapid");if(z.length===0)throw new Error("No VAPID key found. Create a lease first to auto-generate one.");if(z.length>1)throw new Error("Multiple VAPID keys found. Please specify kid explicitly.");let qe=z[0];if(!qe)throw new Error("No VAPID key found after filtering");n=qe.kid}let s=await Y(t);if(!s)throw new Error(`Lease not found: ${t}`);if(Date.now()>=s.exp)throw new Error("Lease expired");let d=(await x()).filter(q=>q.purpose==="vapid");if(d.length===0)throw new Error("No VAPID key available");d.sort((q,z)=>z.createdAt-q.createdAt);let o=d[0]?.kid;if(!o)throw new Error("Failed to determine current VAPID key");if(s.kid!==o)throw new Error("Lease invalidated by VAPID key rotation (wrong-key)");await et(t,s.lakDelegationCert);let i=await Ae();if(!i)throw new Error("No push subscription found. Call setPushSubscription() first.");let c=await K(`quota:${t}`),u=St(c),l=Date.now()-3600*1e3;if(u.lastResetAt<l&&(u.tokensIssued=0,u.lastResetAt=Date.now()),u.tokensIssued>=s.quotas.tokensPerHour)throw new Error("Quota exceeded: tokens per hour");u.tokensIssued++,await C(`quota:${t}`,u);let p=r.jti??crypto.randomUUID(),y=r.exp??Math.floor(Date.now()/1e3)+900,w=new URL(i.endpoint),k=`${w.protocol}//${w.host}`,h={aud:k,sub:"mailto:kms@example.com",exp:y,jti:p,uid:s.userId,eid:i.eid},m=Ue.get(t);if(!m){let q=await K(`sessionkek:${t}`);if(!q)throw new Error(`SessionKEK not found for lease: ${t}`);m=q,Ue.set(t,m)}let b=s.wrappedLeaseKey,E=new Uint8Array(s.wrappedLeaseKeyIV),R=await crypto.subtle.unwrapKey("pkcs8",b,m,{name:"AES-GCM",iv:E},{name:"ECDSA",namedCurve:"P-256"},!1,["sign"]),T={typ:"JWT",alg:"ES256",kid:s.kid},te=f(new TextEncoder().encode(JSON.stringify(T)).buffer),re=f(new TextEncoder().encode(JSON.stringify(h)).buffer),we=new TextEncoder().encode(`${te}.${re}`),ne=await crypto.subtle.sign({name:"ECDSA",hash:"SHA-256"},R,we),Te=f(ne),Vt=`${te}.${re}.${Te}`,Tt=await P({op:"sign",kid:s.kid,requestId:e,userId:s.userId,leaseId:t,details:{action:"issue-lease-jwt",jti:p,aud:k,eid:i.eid}});return{jwt:Vt,jti:p,exp:y,auditEntry:Tt}}async function or(r,e){let{leaseId:t,count:n,kid:s}=r;if(!Number.isInteger(n)||n<1||n>10)throw new Error("count must be an integer between 1 and 10");let a=900,d=Math.floor(a*.6),o=Math.floor(Date.now()/1e3),i=[];for(let c=0;c<n;c++){let u=crypto.randomUUID(),l=o+a+c*d,p=await Lt({leaseId:t,...s!==void 0&&{kid:s},jti:u,exp:l},`${e}-${c}`);i.push(p)}return i}async function dr(r){let e=r?.userId??"default",t=await Qe(e),n=[];await Re(e)&&n.push("passphrase"),await De(e)&&n.push("passkey");let s;return t&&r?.userId&&(s=await ve(r.userId)),{isSetup:t,methods:n,...s!==void 0&&{leases:s}}}async function ur(r){let e=r?.userId??"default",t=[];if(await Re(e)&&t.push("enrollment:passphrase:v2"),await De(e)){let n=await K(`enrollment:passkey-prf:v2:${e}`),s=await K(`enrollment:passkey-gate:v2:${e}`);n&&t.push("enrollment:passkey-prf:v2"),s&&t.push("enrollment:passkey-gate:v2")}return{enrollments:t}}async function cr(){return await rt()}async function lr(){return{entries:await _()}}async function pr(r){let{kid:e}=r,t=await U(e);if(!t||!t.publicKeyRaw)throw new Error(`Public key not found for kid: ${e}`);return{publicKey:f(t.publicKeyRaw)}}async function yr(){return await nt()}async function fr(r){let{userId:e}=r;return{leases:await ve(e)}}async function wr(r){let{leaseId:e,deleteIfInvalid:t=!1}=r,n=await Y(e);if(!n)return{leaseId:e,valid:!1,reason:"not-found",kid:""};if(Date.now()>=n.exp)return t&&await X(e),{leaseId:e,valid:!1,reason:"expired",kid:n.kid};let a=(await x()).filter(i=>i.purpose==="vapid");if(a.length===0)return t&&await X(e),{leaseId:e,valid:!1,reason:"no-vapid-key",kid:n.kid};a.sort((i,c)=>c.createdAt-i.createdAt);let d=a[0];if(!d)return t&&await X(e),{leaseId:e,valid:!1,reason:"no-vapid-key",kid:n.kid};let o=d.kid;return n.kid!==o?(t&&await X(e),{leaseId:e,valid:!1,reason:"wrong-key",kid:n.kid}):{leaseId:e,valid:!0,kid:n.kid}}async function mr(){let e=(await x()).filter(n=>n.purpose==="vapid");if(e.length===0)throw new Error("No VAPID key found");if(e.length>1)throw new Error("Multiple VAPID keys found. Please use getPublicKey(kid) with explicit kid.");let t=e[0];if(!t)throw new Error("No VAPID key found after filtering");return{kid:t.kid}}async function hr(r){return await _e(r.subscription),{success:!0}}async function gr(){return await ze(),{success:!0}}async function kr(){return{subscription:await Ae()}}async function br(){He();let r=indexedDB.deleteDatabase("kms-v2");return await new Promise((e,t)=>{r.onsuccess=()=>e(),r.onerror=()=>t(new Error(r.error?.message??"Failed to delete database"))}),await ie(),st(),{success:!0}}async function vr(r,e){let{enrollmentId:t,credentials:n}=r;return await V(n,async(s,a)=>(await M(s),!0)),await Ge(t),await P({op:"reset",kid:"",requestId:e,userId:n.userId,details:{action:"remove-enrollment",enrollmentId:t}}),{success:!0}}var Ue,fe,Ut=B(()=>{"use strict";Ye();at();de();G();he();Pt();xt();Ue=new Map,fe=new Map;self.addEventListener("message",r=>{(async()=>{let e=r.data,t=await Ct(e);self.postMessage(t)})().catch(e=>{console.error("[KMS Worker] Message handling failed:",e);let t=r.data;self.postMessage({id:t?.id||"unknown",error:e instanceof Error?e.message:"Unknown error"})})});(async()=>{try{await ie(),await Xe(),await tt(),(await _()).length===0&&await P({op:"kms-init",kid:"",requestId:`init-${Date.now()}`,userId:"system",details:{kmsVersion:"v2.0.0",timestamp:new Date().toISOString(),note:"KMS worker initialized, KIAK generated"}})}catch(r){console.error("[KMS Worker] Initialization failed:",r)}})()});he();function Ft(r){if(typeof r!="object"||r===null)return!1;let e=r;if("enabled"in e&&typeof e.enabled!="boolean")return!1;if("results"in e){if(typeof e.results!="object"||e.results===null)return!1;let t=e.results;if("first"in t&&!(t.first instanceof ArrayBuffer)&&!(t.first instanceof Uint8Array)||"second"in t&&!(t.second instanceof ArrayBuffer)&&!(t.second instanceof Uint8Array))return!1}return!0}function O(r){let t=r.getClientExtensionResults().prf;if(t){if(!Ft(t)){console.warn("[WebAuthn] Invalid PRF extension result structure:",t);return}return t}}G();var Ve=class{worker=null;parentOrigin;workerUrl;isInitialized=!1;pendingUnlockRequest=null;isStatelessPopup=!1;transportPublicKey=null;transportKeyId=null;appSalt=null;constructor(e){this.parentOrigin=e.parentOrigin,this.workerUrl=e.workerUrl??"./kms-worker.644fc82d.js"}async init(){if(this.isInitialized)throw new Error("KMSClient already initialized");try{let e=new URLSearchParams(window.location.search);this.transportPublicKey=e.get("transportKey"),this.transportKeyId=e.get("keyId"),this.appSalt=e.get("appSalt"),this.isStatelessPopup=!!(this.transportPublicKey&&this.transportKeyId),console.log("[KMS Client] Popup detection:",{url:window.location.href,transportKey:this.transportPublicKey?.slice(0,20)+"...",keyId:this.transportKeyId,isStatelessPopup:this.isStatelessPopup}),this.isStatelessPopup&&console.log("[KMS Client] Running in stateless popup mode"),this.worker=new Worker(this.workerUrl,{type:"module",name:"kms-worker-v2"}),this.worker.addEventListener("message",this.handleWorkerMessage.bind(this)),this.worker.addEventListener("error",this.handleWorkerError.bind(this)),window.addEventListener("message",this.handleParentMessage.bind(this)),this.isInitialized=!0,this.isStatelessPopup?console.log("[KMS Client] Skipping kms:ready in stateless popup mode"):this.sendToParent({type:"kms:ready"})}catch(e){throw console.error("[KMS Client] Initialization failed:",e),new Error(me("Failed to initialize KMS client",e))}}handleParentMessage(e){if(e.origin!==this.parentOrigin){console.warn("[KMS Client] Rejected message from invalid origin:",{expected:this.parentOrigin,received:e.origin});return}if(!this.isInitialized||!this.worker){console.error("[KMS Client] Received message before initialization");return}let t=e.data,n=["createLease","generateVAPID","signJWT","regenerateVAPID","addEnrollment"];if(t?.method&&n.includes(t.method)){this.showUnlockModal(t);return}if(t?.method==="extendLeases"&&t.params&&typeof t.params=="object"&&"requestAuth"in t.params&&t.params.requestAuth===!0){this.showUnlockModal(t);return}try{this.worker.postMessage(e.data)}catch(s){console.error("[KMS Client] Failed to forward message to Worker:",s),t?.id&&this.sendToParent({id:t.id,error:me("Failed to forward message",s)})}}handleWorkerMessage(e){try{let t=e.data;this.sendToParent(t)}catch(t){console.error("[KMS Client] Failed to forward message to parent:",t)}}handleWorkerError(e){console.error("[KMS Client] Worker error:",{message:e.message,filename:e.filename,lineno:e.lineno,colno:e.colno})}sendToParent(e){let t=window.opener!==null&&window.opener!==window,n=t?window.opener:window.parent;if(!n||n===window){console.error("[KMS Client] No parent/opener window available",{isPopup:t,hasOpener:window.opener!==null,hasParent:window.parent!==window});return}try{n.postMessage(e,this.parentOrigin)}catch(s){console.error("[KMS Client] Failed to send message to parent/opener:",s)}}async getEnrollments(e){return new Promise((t,n)=>{let s=`get-enrollments-${Date.now()}`,a={id:s,method:"getEnrollments",params:{userId:e}},d=o=>{let i=o.data;if(i.id===s)if(this.worker?.removeEventListener("message",d),i.error){let c=typeof i.error=="string"?i.error:i.error.message;n(new Error(c))}else t(i.result?.enrollments||[])};this.worker?.addEventListener("message",d),this.worker?.postMessage(a),setTimeout(()=>{this.worker?.removeEventListener("message",d),n(new Error("getEnrollments timeout"))},5e3)})}showUnlockModal(e){this.pendingUnlockRequest=e;let t=document.getElementById("unlock-modal"),n=document.getElementById("kms-webauthn-btn"),s=document.getElementById("kms-passphrase-input"),a=document.getElementById("kms-passphrase-btn");if(!t||!n||!s||!a){console.error("[KMS Client] Modal elements not found"),e?this.sendToParent({id:e.id,error:"Modal UI not found"}):this.sendToParent({type:"kms:unlock-error",error:"Modal UI not found"});return}t.classList.remove("hidden"),n.onclick=()=>this.handleWebAuthnUnlock(),a.onclick=()=>this.handlePassphraseUnlock(s.value),s.onkeydown=d=>{d.key==="Enter"&&this.handlePassphraseUnlock(s.value).catch(o=>{console.error("[KMS Client] Passphrase unlock failed:",o),this.showError(o instanceof Error?o.message:"Unknown error")})},this.hideError()}async handleWebAuthnUnlock(){this.showLoading(),this.hideError();try{let e=localStorage.getItem("kms:appSalt"),t;e?t=new Uint8Array(e.split(",").map(p=>parseInt(p,10))):t=crypto.getRandomValues(new Uint8Array(32));let n=await navigator.credentials.get({publicKey:{challenge:new Uint8Array(32),timeout:6e4,userVerification:"required",extensions:{prf:{eval:{first:t}}}}});if(!n)throw new Error("No credential returned");let a=O(n)?.results?.first;if(!this.pendingUnlockRequest)throw new Error("No pending operation");let d=this.pendingUnlockRequest.params?.userId;if(!d)throw new Error("userId not found in request params");let o=await this.getEnrollments(d),i=o.includes("enrollment:passkey-prf:v2"),c=o.includes("enrollment:passkey-gate:v2"),u;if(i&&a)u={method:"passkey-prf",prfOutput:a,userId:d};else if(c)u={method:"passkey-gate",userId:d};else throw new Error("No passkey enrollment found for this user");let l={...this.pendingUnlockRequest,params:{...this.pendingUnlockRequest.params,credentials:u}};this.setupUnlockResponseListener(l),this.worker?.postMessage(l)}catch(e){this.hideLoading(),this.showError(`WebAuthn failed: ${S(e)}`),console.error("[KMS Client] WebAuthn unlock failed:",e)}}async handlePassphraseUnlock(e){if(!e||e.trim().length===0){this.showError("Please enter a passphrase");return}this.showLoading(),this.hideError();try{if(!this.pendingUnlockRequest)throw new Error("No pending operation");let t=this.pendingUnlockRequest.params?.userId;if(!t)throw new Error("userId not found in request params");let n={...this.pendingUnlockRequest,params:{...this.pendingUnlockRequest.params,credentials:{method:"passphrase",passphrase:e,userId:t}}};this.setupUnlockResponseListener(n),this.worker?.postMessage(n)}catch(t){console.error("[KMS Client] Passphrase unlock failed:",t),this.hideLoading(),this.showError(`Unlock failed: ${S(t)}`)}}setupUnlockResponseListener(e){let t=n=>{let s=n.data;s.id===e.id&&(this.worker?.removeEventListener("message",t),this.hideModal(),this.sendToParent(s),this.pendingUnlockRequest=null)};this.worker?.addEventListener("message",t)}showError(e){let t=document.getElementById("kms-modal-error");t&&(t.textContent=e,t.classList.remove("hidden"))}hideError(){let e=document.getElementById("kms-modal-error");e&&e.classList.add("hidden")}showLoading(){let e=document.getElementById("kms-modal-loading");e&&e.classList.remove("hidden")}hideLoading(){let e=document.getElementById("kms-modal-loading");e&&e.classList.add("hidden")}hideModal(){let e=document.getElementById("unlock-modal");e&&e.classList.add("hidden");let t=document.getElementById("kms-passphrase-input");t&&(t.value=""),this.hideLoading(),this.hideError()}async promptUnlockForEnrollment(e,t){this.hideSetupSuccess();let n=document.querySelector("#setup-modal .kms-modal-body");if(n){n.querySelectorAll(".kms-auth-option, .kms-divider").forEach(i=>i.classList.add("hidden"));let a=document.createElement("div");a.id="multi-enrollment-unlock",a.className="multi-enrollment-instructions",a.innerHTML=`
        <p class="multi-enrollment-title">
          🔒 Multi-Enrollment Authentication Required
        </p>
        <p class="multi-enrollment-description">
          You already have an authentication method set up. Please authenticate with your existing method to add a new one.
        </p>
      `,n.insertBefore(a,n.firstChild);let d=e.some(i=>i.includes("passphrase")),o=e.some(i=>i.includes("passkey"));if(d){let i=document.createElement("div");i.className="kms-auth-option",i.id="temp-passphrase-unlock",i.innerHTML=`
          <label for="temp-passphrase-input" class="kms-input-label">Passphrase</label>
          <input
            type="password"
            id="temp-passphrase-input"
            class="kms-input"
            placeholder="Enter your passphrase"
            autocomplete="off"
          />
          <button id="temp-passphrase-btn" class="kms-auth-btn kms-secondary">
            <span class="kms-auth-icon">🔐</span>
            <span class="kms-auth-label">Unlock with Passphrase</span>
          </button>
        `,n.appendChild(i)}if(o){let i=document.createElement("div");i.className="kms-auth-option",i.id="temp-passkey-unlock",i.innerHTML=`
          <button id="temp-passkey-btn" class="kms-auth-btn kms-primary">
            <span class="kms-auth-icon">🔑</span>
            <span class="kms-auth-label">Unlock with Passkey</span>
          </button>
        `,n.appendChild(i)}}return new Promise(s=>{let a=()=>{document.getElementById("multi-enrollment-unlock")?.remove(),document.getElementById("temp-passphrase-unlock")?.remove(),document.getElementById("temp-passkey-unlock")?.remove(),n?.querySelectorAll(".kms-auth-option, .kms-divider")?.forEach(u=>u.classList.remove("hidden"))},d=document.getElementById("temp-passphrase-btn"),o=document.getElementById("temp-passphrase-input");if(d&&o){let c=()=>{let u=o.value;if(!u){this.showSetupError("Please enter your passphrase");return}a(),s({method:"passphrase",passphrase:u,userId:t})};d.onclick=c,o.onkeydown=u=>{u.key==="Enter"&&c()}}let i=document.getElementById("temp-passkey-btn");i&&(i.onclick=async()=>{try{let c=localStorage.getItem("kms:appSalt"),u;c?u=new Uint8Array(c.split(",").map(m=>parseInt(m,10))):u=crypto.getRandomValues(new Uint8Array(32));let l=await navigator.credentials.get({publicKey:{challenge:new Uint8Array(32),timeout:6e4,userVerification:"required",extensions:{prf:{eval:{first:u}}}}});if(!l)throw new Error("No credential returned");let y=O(l)?.results?.first,w=e.some(m=>m.includes("prf")),k=e.some(m=>m.includes("gate")),h;if(w&&y)h={method:"passkey-prf",prfOutput:y,userId:t};else if(k)h={method:"passkey-gate",userId:t};else throw new Error("Unable to determine passkey method");a(),s(h)}catch(c){this.showSetupError(`Passkey unlock failed: ${S(c)}`)}})})}setupSetupModalHandlers(){let e=document.getElementById("kms-setup-webauthn-btn"),t=document.getElementById("kms-setup-passphrase-input"),n=document.getElementById("kms-setup-passphrase-confirm-input"),s=document.getElementById("kms-setup-passphrase-btn"),a=document.getElementById("kms-passphrase-char-count");if(!e||!t||!n||!s){console.error("[KMS Client] Setup modal elements not found");return}e.onclick=()=>this.handleWebAuthnSetup();let d=document.getElementById("kms-passphrase-match-feedback"),o=()=>{let c=t.value,u=n.value;if(d){if(u.length===0){d.classList.add("hidden");return}d.classList.remove("hidden"),c===u?(d.textContent="✓ Passphrases match",d.classList.remove("error"),d.classList.add("success")):(d.textContent="✗ Passphrases do not match",d.classList.remove("success"),d.classList.add("error"))}};t.oninput=()=>{let c=t.value.length,u=12;a&&(a.textContent=`${c} / ${u} characters`,c<u?(a.classList.remove("success"),a.classList.add("error")):(a.classList.remove("error"),a.classList.add("success"))),o()},n.oninput=o,s.onclick=()=>this.handlePassphraseSetup(t.value,n.value);let i=()=>{this.handlePassphraseSetup(t.value,n.value).catch(c=>{console.error("[KMS Client] Passphrase setup failed:",c),this.showSetupError(c instanceof Error?c.message:"Unknown error")})};t.onkeydown=c=>{c.key==="Enter"&&i()},n.onkeydown=c=>{c.key==="Enter"&&i()}}async encryptCredentials(e,t){let n=await crypto.subtle.generateKey({name:"ECDH",namedCurve:"P-256"},!0,["deriveBits"]),s=D(t),a=await crypto.subtle.importKey("raw",s,{name:"ECDH",namedCurve:"P-256"},!1,[]),d=await crypto.subtle.deriveBits({name:"ECDH",public:a},n.privateKey,256),o=await crypto.subtle.importKey("raw",d,"HKDF",!1,["deriveBits"]),i=await crypto.subtle.deriveBits({name:"HKDF",salt:new Uint8Array(32),info:new TextEncoder().encode("ATS/KMS/setup-transport/v2"),hash:"SHA-256"},o,256),c=await crypto.subtle.importKey("raw",i,{name:"AES-GCM",length:256},!1,["encrypt"]),u=crypto.getRandomValues(new Uint8Array(12)),l=new TextEncoder().encode(JSON.stringify(e)),p=await crypto.subtle.encrypt({name:"AES-GCM",iv:u,tagLength:128},c,l),y=await crypto.subtle.exportKey("raw",n.publicKey);return{ephemeralPublicKey:f(y),iv:f(u.buffer),encryptedCredentials:f(p)}}async handleWebAuthnSetup(){this.showSetupLoading(),this.hideSetupError();try{let e="demouser@ats.run",t=window.location.hostname;if(this.isStatelessPopup){let p=D(this.appSalt),y=await navigator.credentials.create({publicKey:{challenge:crypto.getRandomValues(new Uint8Array(32)),rp:{id:t,name:"ATS KMS V2"},user:{id:new TextEncoder().encode(e),name:e,displayName:e},pubKeyCredParams:[{type:"public-key",alg:-7},{type:"public-key",alg:-257}],authenticatorSelection:{authenticatorAttachment:"platform",userVerification:"required",residentKey:"required"},extensions:{prf:{eval:{first:p}}}}});if(!y)throw new Error("No credential returned");let w=O(y),k=w?.enabled===!0,h=w?.results?.first,m;if(k)if(h)m="passkey-prf",console.log("[KMS Client] PRF output available from create() (modern platform)");else{console.log("[KMS Client] PRF enabled but no output yet, calling get() (legacy platform)");let R=await navigator.credentials.get({publicKey:{challenge:crypto.getRandomValues(new Uint8Array(32)),timeout:6e4,userVerification:"required",extensions:{prf:{eval:{first:p}}}}});h=O(R)?.results?.first,h?(m="passkey-prf",console.log("[KMS Client] PRF output obtained from get()")):(m="passkey-gate",console.warn("[KMS Client] PRF enabled but no output from get(), falling back to gate mode"))}else m="passkey-gate",console.log("[KMS Client] PRF not supported by authenticator, using gate mode");let b={credentialId:f(y.rawId),rpId:t};m==="passkey-prf"&&h&&(b.prfOutput=f(h));let E=await this.encryptCredentials(b,this.transportPublicKey);window.opener&&(window.opener.postMessage({type:"kms:setup-credentials",method:m,transportKeyId:this.transportKeyId,userId:e,...E},this.parentOrigin),this.hideSetupLoading(),this.showSetupSuccess(),setTimeout(()=>window.close(),2e3));return}let n=await this.getEnrollments(e),s=null;n.length>0&&(this.hideSetupLoading(),s=await this.promptUnlockForEnrollment(n,e),this.showSetupLoading());let a=crypto.getRandomValues(new Uint8Array(32)),d=await navigator.credentials.create({publicKey:{challenge:crypto.getRandomValues(new Uint8Array(32)),rp:{id:t,name:"ATS KMS V2"},user:{id:new TextEncoder().encode(e),name:e,displayName:e},pubKeyCredParams:[{type:"public-key",alg:-7},{type:"public-key",alg:-257}],authenticatorSelection:{authenticatorAttachment:"platform",userVerification:"required",residentKey:"required"},extensions:{prf:{eval:{first:a}}}}});if(!d)throw new Error("No credential returned");let i=O(d)?.enabled===!0,c;if(i){let p=await navigator.credentials.get({publicKey:{challenge:crypto.getRandomValues(new Uint8Array(32)),timeout:6e4,userVerification:"required",extensions:{prf:{eval:{first:a}}}}});c=O(p)?.results?.first}let u;s?u={id:`add-enrollment-${Date.now()}`,method:"addEnrollment",params:{userId:e,method:i&&c?"passkey-prf":"passkey-gate",credentials:s,newCredentials:{credentialId:d.rawId,...c&&{prfOutput:c},rpId:t}}}:u={id:`setup-${Date.now()}`,method:i&&c?"setupPasskeyPRF":"setupPasskeyGate",params:{userId:e,credentialId:d.rawId,...c&&{prfOutput:c},rpId:t}},this.worker?.postMessage(u);let l=await new Promise((p,y)=>{let w=k=>{let h=k.data;if(h.id===u.id)if(this.worker?.removeEventListener("message",w),h.error){let m=typeof h.error=="string"?h.error:h.error.message;y(new Error(m))}else p(h.result)};this.worker?.addEventListener("message",w),setTimeout(()=>{this.worker?.removeEventListener("message",w),y(new Error("Setup timeout"))},3e4)});this.hideSetupLoading(),this.showSetupSuccess(),localStorage.setItem("kms:appSalt",Array.from(a).toString()),this.notifySetupComplete({method:c?"passkey-prf":"passkey-gate",result:l})}catch(e){this.hideSetupLoading(),this.showSetupError(`WebAuthn setup failed: ${S(e)}`),console.error("[KMS Client] WebAuthn setup failed:",e)}}async handlePassphraseSetup(e,t){if(!e||e.trim().length===0){this.showSetupError("Please enter a passphrase");return}if(e.length<12){this.showSetupError("Passphrase must be at least 12 characters");return}if(!t||t.trim().length===0){this.showSetupError("Please confirm your passphrase");return}if(e!==t){this.showSetupError("Passphrases do not match");return}this.showSetupLoading(),this.hideSetupError();try{let n="demouser@ats.run";if(console.log("[KMS Client] handlePassphraseSetup - isStatelessPopup:",this.isStatelessPopup,{transportKey:this.transportPublicKey?.slice(0,20)+"...",keyId:this.transportKeyId}),this.isStatelessPopup){console.log("[KMS Client] Entering stateless popup flow for passphrase setup"),console.log("[KMS Client] window.opener check:",{hasOpener:!!window.opener,openerIsWindow:window.opener===window,parentOrigin:this.parentOrigin});let i=await this.encryptCredentials({passphrase:e},this.transportPublicKey);console.log("[KMS Client] Credentials encrypted, preparing to send to parent");let c={type:"kms:setup-credentials",method:"passphrase",transportKeyId:this.transportKeyId,userId:n,...i},u=!1;if(window.opener)try{console.log("[KMS Client] Sending encrypted credentials via window.opener"),window.opener.postMessage(c,this.parentOrigin),u=!0}catch(l){console.warn("[KMS Client] Failed to send via window.opener:",l)}if(!u)try{console.log("[KMS Client] Sending encrypted credentials via BroadcastChannel");let l=new BroadcastChannel("kms-setup-credentials");l.postMessage(c),l.close(),u=!0}catch(l){console.warn("[KMS Client] Failed to send via BroadcastChannel:",l)}if(!u)try{console.log("[KMS Client] Sending encrypted credentials via localStorage"),localStorage.setItem("kms:setup-credentials",JSON.stringify({...c,timestamp:Date.now()})),u=!0}catch(l){console.warn("[KMS Client] Failed to send via localStorage:",l)}u?(this.hideSetupLoading(),this.showSetupSuccess(),setTimeout(()=>window.close(),2e3)):(console.error("[KMS Client] All communication strategies failed!"),this.hideSetupLoading(),this.showSetupError("Cannot communicate with parent window. Please try again."));return}let s=await this.getEnrollments(n),a=null;s.length>0&&(this.hideSetupLoading(),a=await this.promptUnlockForEnrollment(s,n),this.showSetupLoading());let d;a?d={id:`add-enrollment-${Date.now()}`,method:"addEnrollment",params:{userId:n,method:"passphrase",credentials:a,newCredentials:{passphrase:e}}}:d={id:`setup-${Date.now()}`,method:"setupPassphrase",params:{userId:n,passphrase:e}},this.worker?.postMessage(d);let o=await new Promise((i,c)=>{let u=l=>{let p=l.data;if(p.id===d.id)if(this.worker?.removeEventListener("message",u),p.error){let y=typeof p.error=="string"?p.error:p.error.message;c(new Error(y))}else i(p.result)};this.worker?.addEventListener("message",u),setTimeout(()=>{this.worker?.removeEventListener("message",u),c(new Error("Setup timeout"))},3e4)});this.hideSetupLoading(),this.showSetupSuccess(),this.notifySetupComplete({method:"passphrase",result:o})}catch(n){this.hideSetupLoading(),this.showSetupError(`Setup failed: ${S(n)}`),console.error("[KMS Client] Passphrase setup failed:",n)}}showSetupError(e){let t=document.getElementById("kms-setup-error");t&&(t.textContent=e,t.classList.remove("hidden"))}hideSetupError(){let e=document.getElementById("kms-setup-error");e&&e.classList.add("hidden")}showSetupLoading(){let e=document.getElementById("kms-setup-loading");e&&e.classList.remove("hidden")}hideSetupLoading(){let e=document.getElementById("kms-setup-loading");e&&e.classList.add("hidden")}showSetupSuccess(){let e=document.getElementById("kms-setup-success");e&&e.classList.remove("hidden")}hideSetupSuccess(){let e=document.getElementById("kms-setup-success");e&&e.classList.add("hidden")}notifySetupComplete(e){let t={type:"kms:setup-complete",method:e.method,result:e.result};window.opener&&window.opener.postMessage(t,this.parentOrigin);try{localStorage.setItem("kms:setup-complete",JSON.stringify({timestamp:Date.now(),...t}))}catch(n){console.warn("[KMS Client] Failed to set localStorage flag:",n)}try{let n=new BroadcastChannel("kms-setup");n.postMessage(t),n.close()}catch(n){console.warn("[KMS Client] BroadcastChannel not available:",n)}}async terminate(){this.worker&&(this.worker.terminate(),this.worker=null),this.isInitialized=!1}async send(e){let{handleMessage:t}=await Promise.resolve().then(()=>(Ut(),Bt));return await t(e)}};if(typeof window<"u"&&typeof document<"u"){let r=new URLSearchParams(window.location.search),e=r.get("parentOrigin")??"https://allthe.services",t=window.self!==window.top,n=r.get("mode")==="setup"||r.has("setup"),s=!t&&(window.opener!==null||n),a=new Ve({parentOrigin:e}),d=()=>{a.init().catch(o=>{console.error("[KMS Client] Auto-initialization failed:",o)}),s&&setTimeout(()=>{a.setupSetupModalHandlers();let o=document.getElementById("setup-modal");o&&o.classList.remove("hidden")},100)};if(document.readyState==="loading"?document.addEventListener("DOMContentLoaded",d):d(),t){try{new BroadcastChannel("kms-setup").addEventListener("message",i=>{let c=i.data;c?.type==="kms:setup-complete"&&window.parent&&window.parent.postMessage(c,e)})}catch(o){console.warn("[KMS Client] BroadcastChannel not available for iframe:",o)}window.addEventListener("storage",o=>{if(o.key==="kms:setup-complete"&&o.newValue)try{let i=JSON.parse(o.newValue);window.parent&&window.parent.postMessage({type:i.type,method:i.method,result:i.result},e),localStorage.removeItem("kms:setup-complete")}catch(i){console.warn("[KMS Client] Failed to parse setup-complete from localStorage:",i)}});try{let o=localStorage.getItem("kms:setup-complete");if(o){let i=JSON.parse(o);i.timestamp&&Date.now()-i.timestamp<5e3&&window.parent&&window.parent.postMessage({type:i.type,method:i.method,result:i.result},e),localStorage.removeItem("kms:setup-complete")}}catch(o){console.warn("[KMS Client] Failed to check localStorage for setup-complete:",o)}}window.__kmsClient=a,window.__kmsContext={isIframe:t,isStandaloneSetup:s}}export{Ve as KMSClient};
